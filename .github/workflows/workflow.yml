name: CI/CD - API Labo

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: internal-api-deploy
  cancel-in-progress: true

env:
  IMAGE: ghcr.io/${{ secrets.GHCR_USER }}/laboratory-api

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Vérifier secrets GHCR
        run: |
          if [ -z "${{ secrets.GHCR_USER }}" ]; then
            echo "❌ Secret GHCR_USER manquant"
            exit 1
          fi
          if [ -z "${{ secrets.GHCR_TOKEN }}" ]; then
            echo "❌ Secret GHCR_TOKEN manquant"
            exit 1
          fi
          echo "✅ Secrets GHCR présents"

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-secrets
    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag
        id: vars
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: Build image
        run: |
          docker build -t $IMAGE:latest -t $IMAGE:${{ steps.vars.outputs.TAG }} .

      - name: Push images
        run: |
          docker push $IMAGE:latest
          docker push $IMAGE:${{ steps.vars.outputs.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ check-secrets, build-and-push ]
    steps:
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy API
        env:
          GHCR_USER: ${{ secrets.GHCR_USER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          SQL_USER: ${{ secrets.LABORATORY_SQL_USER }}
          SQL_PWD: ${{ secrets.LABORATORY_SQL_PASSWORD }}
          DOMAIN_API: api-castruche.duckdns.org
          FRONT_ORIGIN: https://labo-castruche.duckdns.org
        run: |
          ssh -4 -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
          set -eo pipefail
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
          docker pull ghcr.io/$GHCR_USER/laboratory-api:latest
          
          docker network create edge || true
          docker rm -f laboratory_api || true
          
          docker run -d --name laboratory_api \
            --restart=always \
            --network edge \
            -e SPRING_PROFILES_ACTIVE=prod \
            -e LABORATORY_API_PORT=8080 \
            -e LABORATORY_SQL_HOST=mysql-main \
            -e LABORATORY_SQL_PORT=3306 \
            -e LABORATORY_SQL_DB=laboratory_db \
            -e LABORATORY_SQL_USER="$SQL_USER" \
            -e LABORATORY_SQL_PASSWORD="$SQL_PWD" \
            -e CORS_ALLOWED_ORIGINS="$FRONT_ORIGIN" \
            -e LABORATORY_JWT_SECRET="$LABORATORY_JWT_SECRET" \
            ghcr.io/$GHCR_USER/laboratory-api:latest
          EOF